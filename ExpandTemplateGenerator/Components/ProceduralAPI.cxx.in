//
// Function to run the Execute method of this filter
//
Image ${name:gsub("ImageFilter$", ""):gsub("Filter$", "")} ( $(include ImageParameters.in)$(include InputParameters.in)$(include MemberParameters.in) )
{
  ${name} filter;
$(for i = 1,#members do
  OUT=OUT .. [[  filter.Set]] ..members[i].name..[[( ]] .. members[i].name:sub(1,1):lower() .. members[i].name:sub(2,-1) .. [[ );]]
end)
  return filter.Execute ( $(for inum=1,number_of_inputs do
                              if inum>1 then
                                OUT=OUT..', '
                              end
                              OUT=OUT .. 'image' .. inum
                            end
                            local count = number_of_inputs
                            if inputs then
                              for inum=1,#inputs do
                                if  not (inputs[inum].optional and no_optional) then
                                  if count>0 then
                                    OUT = OUT .. ", "
                                  end
                                  count = count + 1
                                  OUT=OUT..inputs[inum].name:sub(1,1):lower() .. inputs[inum].name:sub(2,-1)
                                end
                              end
                            end) );
}
$(if in_place then
      OUT=OUT..[[$(include ProceduralAPIRValueReference.cxx.in)]]
end)$(if inputs and ((not no_procedure) or (no_procedure == 1))then
    local has_optional_inputs = false
    for i =1,#inputs do
      if inputs[i].optional then
        has_optional_inputs=inputs[i].optional
      end
    end
    if has_optional_inputs and not no_optional then
      no_optional=1
-- we recusively include this same template file but with the no_optional variable defined
      OUT=[[
$(include ProceduralAPI.cxx.in)]]
    end
end)$(if inputs then no_optional=nil end)
